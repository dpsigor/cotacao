#!/bin/node
const http = require("https");

const tickerArgs = process.argv.slice(2);

let tickers = [];
if (tickerArgs.length) {
  tickers = tickerArgs.map(x => x += '.SAO').map(x => x.toUpperCase());
} else {
  tickers = ['ITUB4.SAO', 'FBOK34.SAO', 'TSLA34.SAO', 'AAPL34.SAO'];
}

const formatar = (data) => {
  // { 'Global Quote': { '01. symbol': string, '02. open': string, _etc... } }
  const numberKeys = ['02. open', '03. high', '04. low', '05. price', '06. volume', '08. previous close', '09. change'];
  const infos = data['Global Quote'];
  if (!infos) return data;
  numberKeys.forEach(key => {
    infos[key] = parseFloat(infos[key]);
  })
  infos['01. symbol'] = infos['01. symbol'].split('.')[0];
  return infos;
}

const getInfo = async (ticker) => {
  return new Promise((resolve, reject) => {
    const options = {
      "method": "GET",
      "hostname": "alpha-vantage.p.rapidapi.com",
      "port": null,
      "path": `/query?function=GLOBAL_QUOTE&symbol=${ticker}`,
      "headers": {
        "x-rapidapi-key": process.env.RAPIDAPI_KEY,
        "x-rapidapi-host": "alpha-vantage.p.rapidapi.com",
        "useQueryString": true
      }
    };
    const req = http.request(options, function (res) {
      const chunks = [];
      res.on("data", function (chunk) {
        chunks.push(chunk);
      });
      res.on("end", function () {
        const body = Buffer.concat(chunks);
        const info = formatar(JSON.parse(body.toString()));
        resolve(info);
      });
      res.on("error", () => reject(`Erro na pesquisa de ${ticker}`));
    });
    req.end();
  })
}

(async () => {
  const infos = await Promise.all(tickers.map(getInfo));
  console.table(infos);
})();
