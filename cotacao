#!/bin/node
const http = require('https');

const tickerArgs = process.argv.slice(2, process.argv.length);

let tickers = [];
if (tickerArgs.length) {
  tickers = tickerArgs.map(x => x).map(x => x.toUpperCase());
} else {
  tickers = [
    'AAPL34',
    'BBDC4',
    'CVCB3',
    'FBOK34',
    'ITUB4',
    'IVVB11',
    'TSLA34',
  ];
}

const parseHTML = (html, ticker) => {
  if (!html) {
    console.error(ticker, 'Req falhou');
    return null;
  }
  const rgx = /YMlKec fxKbKc.+?>R\$(?<price>.+?)<.+?last closing price<.+?<.+?<.+?<.+?P6K39c">R\$(?<prevClose>.+?)<.+?P6K39c">R\$(?<range>.+?)</s;
  const match = html.match(rgx);
  if (!match) {
    console.error('\x1b[33m%s\x1b[0m', `${ticker} Sem match`);
    return null;
  }
  const {
    price,
    prevClose,
    range,
  } = match.groups;
  const [min, max] = range.replace('R$', '').split('-').map(parseFloat);
  return {
    ticker,
    min,
    price: parseFloat(price),
    max,
    prevClose: parseFloat(price),
    change: ((1 - parseFloat(price) / parseFloat(prevClose)) * 100).toFixed(2) + '%',
  }
}

const getInfo = async (ticker) => {
  try {
    const timeout = new Promise(res => setTimeout(() => res(), 2000));
    const req = new Promise(resolve => {
      const options = {
        'method': 'GET',
        'hostname': 'www.google.com',
        'path': `/finance/quote/${ticker}:BVMF`,
      };
      const req = http.request(options, function (res) {
        const chunks = [];
        res.on('data', function (chunk) {
          chunks.push(chunk);
        });
        res.on('end', function () {
          const body = Buffer.concat(chunks);
          const info = parseHTML(String(body), ticker);
          resolve(info);
        });
        res.on('error', (e) => {
          console.error(e);
          resolve();
        });
      });
      req.end();
    });
    return Promise.race([timeout, req]);
  } catch (e) {
    console.error(e);
    return null;
  }
}

(async () => {
  console.log();
  const infos = await Promise.all(tickers.map(getInfo));
  if (infos.filter(x => !!x).length) console.table(infos.filter(x => !!x));
  console.log();
})();
